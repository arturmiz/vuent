stages:
- stage: test
  jobs:
    - job: lint
      pool:
        vmImage: 'ubuntu-16.04'

      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'Install Node.js'

      - script: |
          yarn install --frozen-lockfile
          yarn lint
        displayName: 'lint'

    - job: unit
      pool:
        vmImage: 'ubuntu-16.04'

      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'Install Node.js'

      - script: |
          yarn install --frozen-lockfile
          yarn test:ci -t $(CODECOV_TOKEN)
        displayName: 'unit'

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'

- stage: build
  jobs:
    - job: Linux
      pool:
        vmImage: 'ubuntu-16.04'

      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'Install Node.js'

      - script: |
          yarn install --frozen-lockfile
          yarn build
        displayName: 'build on ubuntu'

    - job: Windows
      pool:
        vmImage: 'vs2017-win2016'

      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'install Node.js'

      - powershell: |
          yarn install --frozen-lockfile
          yarn build
        displayName: 'build on windows'

      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)'
          contents: |
            dist/*
            README.md
            LICENSE
            package.json
          targetFolder: '$(Build.ArtifactStagingDirectory)'
          overWrite: true

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: vuent

    - job: storybook
      pool:
        vmImage: 'ubuntu-16.04'

      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'install Node.js'

      - script: |
          yarn install --frozen-lockfile
          yarn storybook:build

      - publish: $(System.DefaultWorkingDirectory)/storybook-static
        artifact: storybook

    - job: website
      pool:
        vmImage: 'ubuntu-16.04'

      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'install Node.js'

      - script: |
          yarn install --frozen-lockfile
          yarn docs:build
        displayName: 'build website'

      - publish: $(System.DefaultWorkingDirectory)/docs/dist
        artifact: website

- stage: prerelease
  # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
    - job: artifact
      pool:
        vmImage: 'vs2017-win2016'

      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'install Node.js'

      - powershell: |
          yarn install --frozen-lockfile
          yarn build
        displayName: 'build'

      - script: |
          echo $(BuildID)
          npm --no-git-tag-version version prerelease --preid=$(BuildID)
        displayName: 'version bump'

      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)'
          contents: |
            dist/*
            README.md
            LICENSE
            package.json
          targetFolder: '$(Build.ArtifactStagingDirectory)/artifact'
          overWrite: true

      - publish: $(Build.ArtifactStagingDirectory)/artifact
        artifact: vuent_next
